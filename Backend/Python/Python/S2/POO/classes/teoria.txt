

A convenção para criação do nome de classes é a PascalCase, mas os atributos e 
métodos continuam com snake_case.

class Programador: # NomeDaClasse
    pass

Inicializador

O método __init__ (também conhecido como "dunder init") é um método especial em Python que é chamado 
automaticamente quando um objeto é criado a partir de uma classe. Ele é usado para inicializar o estado do objeto. 
O nome __init__ é formado pelo prefixo e sufixo de duplo sublinhado, o que o torna um "método mágico" em Python:




class Programador:
    # 1. Inicializador
    def __init__(self, email, telefone):
        # 2. Atributos
        self.email = email
        self.telefone = telefone


    # 1. - Inicializador com os parâmetros obrigatórios email e telefone
    # 2. - Atributos da instância são acessados utilizando a palavra reservada self, sendo uma referência a 
    instância atual, similar ao this de outras linguagens.

    

O nome dos atributos atrelados ao self não precisam ser o mesmo dos parâmetros recebidos pelo inicializador, 
mas por convenção sempre procuramos deixá-los iguais.




Você deve ter notado o parâmetro self na definição dos métodos programar e descansar dentro da classe, 
mas chamamos o método simplesmente como se luiz.programar('python') tivesse somente um parâmetro. 
Isso ocorre porque sempre que um objeto chama seu método de instância, o próprio objeto é passado como 
o primeiro argumento implicitamente.




---------------------------------------------------------------------------------------------------------------


Atributos de classe e instância


As classes em Python possuem dois tipos de atributos: os de classe e os de instância.



Atributos de Classe

são atributos que pertencem à classe em si e são compartilhados por todas as instâncias da classe.

são definidos fora do método __init__ e podem ser acessados tanto a partir de classe quanto das instâncias.




Atributos de Instância

são atributos que pertencem a uma instância específica da classe sendo definidos no método __init__. 
Eles são acessados usando o nome da instância seguido pelo ponto (.) e o nome do atributo.




Tipos de Métodos


Um método em Python é uma função que pertence a um objeto ou classe. 
Ele é usado para definir o comportamento de um objeto ou para realizar 
operações com os atributos do objeto.



Tipos de métodos


Em Python, existem três tipos de métodos de uma classe: métodos de classe, métodos 
estáticos e métodos de instância.



Métodos de instância são métodos que pertencem a uma instância específica de uma classe
sendo acessados através da instância. Eles recebem a instância como primeiro argumento 
(conhecido como self) sendo usados para realizar operações com os atributos da instância.




Métodos de classe são métodos que recebem a classe como primeiro argumento 
(conhecido como cls) sendo usados para modificar o estado da classe. Eles são 
definidos usando a palavra-chave @classmethod acima do método.




Métodos estáticos são métodos que não recebem nenhum argumento especial 
(nem self, nem cls) sendo usados para realizar operações que não estão relacionadas 
ao estado da classe ou de uma instância. Eles são definidos usando a palavra-chave @staticmethod acima do método.






Os métodos estáticos e de classe podem ser chamados diretamente pela 
classe em que foram definidos, ou pelas instâncias




