Imutabilidade

Alguns exemplos de tipos de dados imutáveis em Python incluem números inteiros, 
ponto flutuante, strings e tuplas. Você não pode alterar os valores de um número 
inteiro ou ponto flutuante após criá-los, nem pode alterar os caracteres de uma string 
ou os elementos de uma tupla após criá-los.

Ex 
>>> nome = 'python'
>>> nome[0] = 'P'


Agora vamos para um exemplo com outro tipo imutável, o int. 
Utilizaremos a função builtin id para analisar
 o endereço de memória em que cada variável está alocada:

# 1.
>>> var_1 = 10
>>> var_2 = var_1
>>> id(var_1)
139921912676880
>>> id(var_2)
139921912676880

>>> var_1 is var_2
True

# 2.
>>> var_1 = 20
>>> id(var_1)
139822963032592

>>> var_1 is var_2
False







Mutabilidade


Alguns exemplos de tipos de dados mutáveis em Python incluem listas, 
dicionários e conjuntos. Por exemplo, você pode alterar os elementos de 
uma lista adicionando ou removendo itens da lista, ou alterando os valores 
dos itens da lista. Você também pode adicionar ou remover pares chave-valor 
de um dicionário ou adicionar, ou remover elementos de um conjunto.

# 1.
>>> list_1 = [1, 2, 3]
>>> list_2 = list_1

>>> id(list_1)
139822963032133
>>> id(list_2)
139822963032133
>>> list_1 is list_2
True

# 2.
>>> list_1[0] = 7
>>> list_1
[7, 2, 3]
# Ao modificar a list_1, a list_2 é modificada por tabela
>>> list_2
[7, 2, 3]
>>> list_1 is list_2
True



Comportamento em Funções

# main.py
def func_param(lista, numero):
    lista.append(100)
    numero = numero + 50
    print(f'Lista dentro da função: {lista}')
    # Lista dentro da função: [5, 25, 50, 100]
    print(f'Número dentro da função: {numero}')
    # Número dentro da função: 75

minha_lista = [5, 25, 50]
numero_inteiro = 25

print(f'Lista antes da chamada da função: {minha_lista}')
# Lista antes da chamada da função: [5, 25, 50]
print(f'Inteiro antes da chamada da função: {numero_inteiro}')
# Inteiro antes da chamada da função: 25
print('*' * 50)
# **************************************************
func_param(minha_lista, numero_inteiro)
print('*' * 50)
# **************************************************
print(f'Lista fora do escopo da função {minha_lista}')
# Lista fora do escopo da função [5, 25, 50, 100]
print(f'Inteiro fora do escopo da da função: {numero_inteiro}')
# Inteiro fora do escopo da da função: 25


